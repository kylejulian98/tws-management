import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group = "dev.kylejulian.twsmanagement"

if (hasProperty('ver')) {
    version = ver.substring(1)
} else {
    SimpleDateFormat sdf = new SimpleDateFormat("yyMMdd-HHmm")
    sdf.setTimeZone(TimeZone.getTimeZone("UTC"))
    version = sdf.format(new Date()).toString()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()

  	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
  	maven { url 'https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core' }
  	maven { url 'https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2' }

    // Purpur main branch
    // maven { url 'https://repo.pl3x.net' }

    // Purpur snapshot branch
    maven { url 'https://repo.purpurmc.org/snapshots' }

    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.kryptonmc.org/releases' }
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'
    implementation 'org.apache.commons:commons-dbcp2:2.9.0' // Connection Pooling
    implementation "net.kyori:adventure-api:4.9.3"

    compileOnly 'me.neznamy:tab-api:3.0.0'
    compileOnly 'net.luckperms:api:5.3'
    compileOnly 'org.jetbrains:annotations:23.0.0'

    // Purpur main branch
    // compileOnly 'net.pl3x.purpur:purpur-api:1.17.1-R0.1-SNAPSHOT'

    // Purpur snapshot branch
    compileOnly 'org.purpurmc.purpur:purpur-api:1.18-R0.1-SNAPSHOT'
}

processResources {
    filesMatching("**/plugin.yml") {
        expand ( VERSION: version, PACKAGE: project.group.toString(), NAME: rootProject.name )
    }
}

shadowJar {
    archiveClassifier.set('SNAPSHOT')
}

jar.enabled = false
assemble.dependsOn(shadowJar)

task release {
    dependsOn build
    doLast {
        def dirStr = buildDir.toString() + '/libs/'
        file(dirStr + rootProject.name + '-' + version + '-SNAPSHOT.jar').renameTo(dirStr + rootProject.name + '-' + version + '.jar')
    }
}